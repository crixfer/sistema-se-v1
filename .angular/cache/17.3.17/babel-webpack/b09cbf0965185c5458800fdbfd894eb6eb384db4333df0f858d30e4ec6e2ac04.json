{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DashboardService {\n  constructor() {}\n  getStatusCards() {\n    return of([{\n      title: 'Solicitudes Completadas',\n      value: '127',\n      color: '#49aa42'\n    }, {\n      title: 'Solicitudes en Proceso',\n      value: '34',\n      color: '#004b8d'\n    }, {\n      title: 'Solicitudes Pendientes',\n      value: '18',\n      color: '#f59e0b'\n    }, {\n      title: 'Total de Solicitudes',\n      value: '179',\n      color: '#6d6d6d'\n    }]);\n  }\n  getEstadisticasDetalladas() {\n    return of({\n      total: 179,\n      completadas: 127,\n      enProceso: 34,\n      pendientes: 18,\n      tiempoPromedioRespuesta: 3.8\n    });\n  }\n  getUserInfo() {\n    return {\n      name: 'C. PORTORREAL',\n      role: 'ADMINISTRADOR',\n      initials: 'CP'\n    };\n  }\n  getServiciosMasSolicitados() {\n    return of([{\n      nombre: 'Récord de Notas',\n      porcentaje: 38,\n      cantidad: 68\n    }, {\n      nombre: 'Constancia de Estudiante',\n      porcentaje: 25,\n      cantidad: 45\n    }, {\n      nombre: 'Certificado de Estudios',\n      porcentaje: 18,\n      cantidad: 32\n    }, {\n      nombre: 'Carta de Presentación',\n      porcentaje: 12,\n      cantidad: 21\n    }, {\n      nombre: 'Certificado de Conducta',\n      porcentaje: 7,\n      cantidad: 13\n    }]);\n  }\n  getTiemposRespuestaPorServicio() {\n    return of([{\n      servicio: 'Récord de Notas',\n      tiempo: 3,\n      color: '#004b8d'\n    }, {\n      servicio: 'Constancia Estudiante',\n      tiempo: 2,\n      color: '#49aa42'\n    }, {\n      servicio: 'Certificado Estudios',\n      tiempo: 5,\n      color: '#f59e0b'\n    }, {\n      servicio: 'Carta Presentación',\n      tiempo: 3,\n      color: '#8b5cf6'\n    }, {\n      servicio: 'Certificado Conducta',\n      tiempo: 4,\n      color: '#ef4444'\n    }, {\n      servicio: 'Historial Académico',\n      tiempo: 7,\n      color: '#06b6d4'\n    }]);\n  }\n  getActividadReciente() {\n    return of([{\n      tipo: 'completada',\n      solicitud: 'SOL-2024-789456',\n      estudiante: 'María González',\n      servicio: 'Récord de Notas',\n      fecha: new Date(Date.now() - 2 * 60 * 60 * 1000),\n      icono: 'fas fa-check-circle',\n      color: 'text-green-600'\n    }, {\n      tipo: 'nueva',\n      solicitud: 'SOL-2024-789457',\n      estudiante: 'Carlos Rodríguez',\n      servicio: 'Certificado de Estudios',\n      fecha: new Date(Date.now() - 4 * 60 * 60 * 1000),\n      icono: 'fas fa-plus-circle',\n      color: 'text-blue-600'\n    }, {\n      tipo: 'en_proceso',\n      solicitud: 'SOL-2024-789455',\n      estudiante: 'Ana Martínez',\n      servicio: 'Constancia de Estudiante',\n      fecha: new Date(Date.now() - 6 * 60 * 60 * 1000),\n      icono: 'fas fa-clock',\n      color: 'text-yellow-600'\n    }, {\n      tipo: 'entregada',\n      solicitud: 'SOL-2024-789454',\n      estudiante: 'Luis Pérez',\n      servicio: 'Carta de Presentación',\n      fecha: new Date(Date.now() - 8 * 60 * 60 * 1000),\n      icono: 'fas fa-handshake',\n      color: 'text-emerald-600'\n    }]);\n  }\n  static {\n    this.ɵfac = function DashboardService_Factory(t) {\n      return new (t || DashboardService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DashboardService,\n      factory: DashboardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","DashboardService","constructor","getStatusCards","title","value","color","getEstadisticasDetalladas","total","completadas","enProceso","pendientes","tiempoPromedioRespuesta","getUserInfo","name","role","initials","getServiciosMasSolicitados","nombre","porcentaje","cantidad","getTiemposRespuestaPorServicio","servicio","tiempo","getActividadReciente","tipo","solicitud","estudiante","fecha","Date","now","icono","factory","ɵfac","providedIn"],"sources":["C:\\Users\\comma\\OneDrive\\Documents\\CODING\\DESARROLLO\\Solicitudes\\project-bolt-sb1-xaykabqq\\project\\src\\app\\core\\services\\dashboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { StatusCard } from '../../shared/components/status-card/status-card.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  constructor() {}\n\n  getStatusCards(): Observable<StatusCard[]> {\n    return of([\n      { \n        title: 'Solicitudes Completadas', \n        value: '127',\n        color: '#49aa42'\n      },\n      { \n        title: 'Solicitudes en Proceso', \n        value: '34',\n        color: '#004b8d'\n      },\n      { \n        title: 'Solicitudes Pendientes', \n        value: '18',\n        color: '#f59e0b'\n      },\n      { \n        title: 'Total de Solicitudes', \n        value: '179',\n        color: '#6d6d6d'\n      }\n    ]);\n  }\n\n  getEstadisticasDetalladas(): Observable<any> {\n    return of({\n      total: 179,\n      completadas: 127,\n      enProceso: 34,\n      pendientes: 18,\n      tiempoPromedioRespuesta: 3.8\n    });\n  }\n\n  getUserInfo() {\n    return {\n      name: 'C. PORTORREAL',\n      role: 'ADMINISTRADOR',\n      initials: 'CP'\n    };\n  }\n\n  getServiciosMasSolicitados(): Observable<any[]> {\n    return of([\n      { nombre: 'Récord de Notas', porcentaje: 38, cantidad: 68 },\n      { nombre: 'Constancia de Estudiante', porcentaje: 25, cantidad: 45 },\n      { nombre: 'Certificado de Estudios', porcentaje: 18, cantidad: 32 },\n      { nombre: 'Carta de Presentación', porcentaje: 12, cantidad: 21 },\n      { nombre: 'Certificado de Conducta', porcentaje: 7, cantidad: 13 }\n    ]);\n  }\n\n  getTiemposRespuestaPorServicio(): Observable<any[]> {\n    return of([\n      { servicio: 'Récord de Notas', tiempo: 3, color: '#004b8d' },\n      { servicio: 'Constancia Estudiante', tiempo: 2, color: '#49aa42' },\n      { servicio: 'Certificado Estudios', tiempo: 5, color: '#f59e0b' },\n      { servicio: 'Carta Presentación', tiempo: 3, color: '#8b5cf6' },\n      { servicio: 'Certificado Conducta', tiempo: 4, color: '#ef4444' },\n      { servicio: 'Historial Académico', tiempo: 7, color: '#06b6d4' }\n    ]);\n  }\n\n  getActividadReciente(): Observable<any[]> {\n    return of([\n      {\n        tipo: 'completada',\n        solicitud: 'SOL-2024-789456',\n        estudiante: 'María González',\n        servicio: 'Récord de Notas',\n        fecha: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 horas atrás\n        icono: 'fas fa-check-circle',\n        color: 'text-green-600'\n      },\n      {\n        tipo: 'nueva',\n        solicitud: 'SOL-2024-789457',\n        estudiante: 'Carlos Rodríguez',\n        servicio: 'Certificado de Estudios',\n        fecha: new Date(Date.now() - 4 * 60 * 60 * 1000), // 4 horas atrás\n        icono: 'fas fa-plus-circle',\n        color: 'text-blue-600'\n      },\n      {\n        tipo: 'en_proceso',\n        solicitud: 'SOL-2024-789455',\n        estudiante: 'Ana Martínez',\n        servicio: 'Constancia de Estudiante',\n        fecha: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 horas atrás\n        icono: 'fas fa-clock',\n        color: 'text-yellow-600'\n      },\n      {\n        tipo: 'entregada',\n        solicitud: 'SOL-2024-789454',\n        estudiante: 'Luis Pérez',\n        servicio: 'Carta de Presentación',\n        fecha: new Date(Date.now() - 8 * 60 * 60 * 1000), // 8 horas atrás\n        icono: 'fas fa-handshake',\n        color: 'text-emerald-600'\n      }\n    ]);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}