{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/comma/OneDrive/Documents/CODING/DESARROLLO/Solicitudes/project-bolt-sb1-xaykabqq/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { of, BehaviorSubject } from 'rxjs';\nimport { RolUsuario } from '../models/auth.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./supabase.service\";\nexport class AuthService {\n  constructor(supabase) {\n    this.supabase = supabase;\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSubject.asObservable();\n    // Usuarios demo para el sistema\n    this.usuariosDemo = [{\n      id: 'demo-admin-id',\n      email: 'admin@demo.com',\n      nombreCompleto: 'Carlos Portorreal',\n      rol: RolUsuario.ADMINISTRADOR,\n      activo: true,\n      permisos: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: true\n        },\n        reportes: {\n          leer: true,\n          exportar: true\n        },\n        usuarios: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: true\n        },\n        configuracion: {\n          leer: true,\n          editar: true\n        }\n      },\n      createdAt: new Date('2024-01-15'),\n      updatedAt: new Date('2024-06-20')\n    }, {\n      id: 'demo-supervisor-id',\n      email: 'supervisor@demo.com',\n      nombreCompleto: 'María González Supervisor',\n      rol: RolUsuario.SUPERVISOR,\n      activo: true,\n      permisos: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: false\n        },\n        reportes: {\n          leer: true,\n          exportar: true\n        },\n        usuarios: {\n          leer: true,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      },\n      createdAt: new Date('2024-02-01'),\n      updatedAt: new Date('2024-06-18')\n    }, {\n      id: 'demo-operador-id',\n      email: 'operador@demo.com',\n      nombreCompleto: 'Ana Martínez Operador',\n      rol: RolUsuario.OPERADOR,\n      activo: true,\n      permisos: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: false\n        },\n        reportes: {\n          leer: false,\n          exportar: false\n        },\n        usuarios: {\n          leer: false,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      },\n      createdAt: new Date('2024-03-10'),\n      updatedAt: new Date('2024-06-15')\n    }, {\n      id: 'demo-consultor-id',\n      email: 'consultor@demo.com',\n      nombreCompleto: 'Luis Pérez Consultor',\n      rol: RolUsuario.CONSULTOR,\n      activo: true,\n      permisos: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        reportes: {\n          leer: true,\n          exportar: false\n        },\n        usuarios: {\n          leer: false,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      },\n      createdAt: new Date('2024-04-05'),\n      updatedAt: new Date('2024-06-10')\n    }, {\n      id: 'demo-operador2-id',\n      email: 'operador2@demo.com',\n      nombreCompleto: 'Carmen Jiménez',\n      rol: RolUsuario.OPERADOR,\n      activo: true,\n      permisos: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: false\n        },\n        reportes: {\n          leer: false,\n          exportar: false\n        },\n        usuarios: {\n          leer: false,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      },\n      createdAt: new Date('2024-05-12'),\n      updatedAt: new Date('2024-06-22')\n    }, {\n      id: 'demo-supervisor2-id',\n      email: 'supervisor2@demo.com',\n      nombreCompleto: 'Roberto Díaz',\n      rol: RolUsuario.SUPERVISOR,\n      activo: false,\n      permisos: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: false\n        },\n        reportes: {\n          leer: true,\n          exportar: true\n        },\n        usuarios: {\n          leer: true,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      },\n      createdAt: new Date('2024-01-20'),\n      updatedAt: new Date('2024-05-30')\n    }];\n    this.initializeAuth();\n  }\n  initializeAuth() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data: {\n            session\n          }\n        } = yield _this.supabase.client.auth.getSession();\n        if (session?.user) {\n          _this.loadUserProfile(session.user.id);\n        }\n        // Escuchar cambios de autenticación\n        _this.supabase.client.auth.onAuthStateChange((event, session) => {\n          if (event === 'SIGNED_IN' && session?.user) {\n            _this.loadUserProfile(session.user.id);\n          } else if (event === 'SIGNED_OUT') {\n            _this.currentUserSubject.next(null);\n          }\n        });\n      } catch (error) {\n        console.error('Error inicializando auth:', error);\n      }\n    })();\n  }\n  loadUserProfile(userId) {\n    this.obtenerPerfil(userId).subscribe({\n      next: usuario => {\n        if (usuario) {\n          this.currentUserSubject.next(usuario);\n        }\n      },\n      error: error => {\n        console.error('Error cargando perfil:', error);\n      }\n    });\n  }\n  // Iniciar sesión\n  login(credentials) {\n    // Buscar usuario en datos demo\n    const usuario = this.usuariosDemo.find(u => u.email === credentials.email);\n    if (usuario && usuario.activo) {\n      // Simular autenticación exitosa\n      this.currentUserSubject.next(usuario);\n      return of(usuario);\n    } else if (usuario && !usuario.activo) {\n      throw new Error('Usuario inactivo');\n    } else {\n      throw new Error('Invalid login credentials');\n    }\n  }\n  // Registrar usuario (solo administradores)\n  register(userData) {\n    const nuevoUsuario = {\n      id: Date.now().toString(),\n      email: userData.email,\n      nombreCompleto: userData.nombreCompleto,\n      rol: userData.rol || RolUsuario.OPERADOR,\n      activo: true,\n      permisos: this.getPermisosPorRol(userData.rol || RolUsuario.OPERADOR),\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.usuariosDemo.push(nuevoUsuario);\n    return of(nuevoUsuario);\n  }\n  // Cerrar sesión\n  logout() {\n    this.currentUserSubject.next(null);\n    return of(void 0);\n  }\n  // Obtener perfil de usuario\n  obtenerPerfil(userId) {\n    const usuario = this.usuariosDemo.find(u => u.id === userId);\n    return of(usuario || null);\n  }\n  // Obtener todos los usuarios (solo administradores)\n  obtenerUsuarios() {\n    return of([...this.usuariosDemo]);\n  }\n  // Actualizar perfil de usuario\n  actualizarPerfil(userId, datos) {\n    const index = this.usuariosDemo.findIndex(u => u.id === userId);\n    if (index !== -1) {\n      this.usuariosDemo[index] = {\n        ...this.usuariosDemo[index],\n        ...datos,\n        updatedAt: new Date()\n      };\n      // Actualizar usuario actual si es el mismo\n      if (this.currentUserSubject.value?.id === userId) {\n        this.currentUserSubject.next(this.usuariosDemo[index]);\n      }\n      return of(this.usuariosDemo[index]);\n    }\n    throw new Error('Usuario no encontrado');\n  }\n  // Cambiar contraseña\n  cambiarPassword(newPassword) {\n    // Simular cambio de contraseña exitoso\n    return of(void 0);\n  }\n  // Verificar si el usuario tiene un permiso específico\n  tienePermiso(modulo, accion) {\n    const usuario = this.currentUserSubject.value;\n    if (!usuario || !usuario.activo) return false;\n    const moduloPermisos = usuario.permisos[modulo];\n    if (!moduloPermisos) return false;\n    return moduloPermisos[accion] || false;\n  }\n  // Verificar si el usuario tiene un rol específico\n  tieneRol(rol) {\n    const usuario = this.currentUserSubject.value;\n    return usuario?.rol === rol || false;\n  }\n  // Verificar si el usuario es administrador\n  esAdministrador() {\n    return this.tieneRol(RolUsuario.ADMINISTRADOR);\n  }\n  // Obtener usuario actual\n  getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n  // Verificar si está autenticado\n  isAuthenticated() {\n    return this.currentUserSubject.value !== null;\n  }\n  // Obtener permisos por rol\n  getPermisosPorRol(rol) {\n    const permisosPorRol = {\n      [RolUsuario.ADMINISTRADOR]: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: true\n        },\n        reportes: {\n          leer: true,\n          exportar: true\n        },\n        usuarios: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: true\n        },\n        configuracion: {\n          leer: true,\n          editar: true\n        }\n      },\n      [RolUsuario.SUPERVISOR]: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: false\n        },\n        reportes: {\n          leer: true,\n          exportar: true\n        },\n        usuarios: {\n          leer: true,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      },\n      [RolUsuario.OPERADOR]: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: true,\n          editar: true,\n          eliminar: false\n        },\n        reportes: {\n          leer: false,\n          exportar: false\n        },\n        usuarios: {\n          leer: false,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      },\n      [RolUsuario.CONSULTOR]: {\n        dashboard: {\n          leer: true\n        },\n        solicitudes: {\n          leer: true,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        reportes: {\n          leer: true,\n          exportar: false\n        },\n        usuarios: {\n          leer: false,\n          crear: false,\n          editar: false,\n          eliminar: false\n        },\n        configuracion: {\n          leer: false,\n          editar: false\n        }\n      }\n    };\n    return permisosPorRol[rol];\n  }\n  // Registrar sesión (mantenido para compatibilidad)\n  registrarSesion(usuarioId) {\n    // Implementación demo - no hace nada real\n  }\n  // Finalizar sesión (mantenido para compatibilidad)\n  finalizarSesion(usuarioId) {\n    // Implementación demo - no hace nada real\n  }\n  // Obtener IP del cliente (mantenido para compatibilidad)\n  getClientIP() {\n    return 'localhost';\n  }\n  // Mapear datos de Supabase a modelo Usuario (mantenido para compatibilidad)\n  mapToUsuario(data) {\n    return {\n      id: data.id,\n      email: data.email,\n      nombreCompleto: data.nombre_completo,\n      rol: data.rol,\n      activo: data.activo,\n      permisos: data.permisos,\n      createdAt: data.created_at ? new Date(data.created_at) : undefined,\n      updatedAt: data.updated_at ? new Date(data.updated_at) : undefined\n    };\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.SupabaseService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","BehaviorSubject","RolUsuario","AuthService","constructor","supabase","currentUserSubject","currentUser$","asObservable","usuariosDemo","id","email","nombreCompleto","rol","ADMINISTRADOR","activo","permisos","dashboard","leer","solicitudes","crear","editar","eliminar","reportes","exportar","usuarios","configuracion","createdAt","Date","updatedAt","SUPERVISOR","OPERADOR","CONSULTOR","initializeAuth","_this","_asyncToGenerator","data","session","client","auth","getSession","user","loadUserProfile","onAuthStateChange","event","next","error","console","userId","obtenerPerfil","subscribe","usuario","login","credentials","find","u","Error","register","userData","nuevoUsuario","now","toString","getPermisosPorRol","push","logout","obtenerUsuarios","actualizarPerfil","datos","index","findIndex","value","cambiarPassword","newPassword","tienePermiso","modulo","accion","moduloPermisos","tieneRol","esAdministrador","getCurrentUser","isAuthenticated","permisosPorRol","registrarSesion","usuarioId","finalizarSesion","getClientIP","mapToUsuario","nombre_completo","created_at","undefined","updated_at","i0","ɵɵinject","i1","SupabaseService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\comma\\OneDrive\\Documents\\CODING\\DESARROLLO\\Solicitudes\\project-bolt-sb1-xaykabqq\\project\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, from, map, catchError, of, BehaviorSubject, tap, switchMap, filter, delay } from 'rxjs';\nimport { SupabaseService } from './supabase.service';\nimport { Usuario, LoginCredentials, RegisterData, RolUsuario, SesionUsuario } from '../models/auth.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject<Usuario | null>(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n\n  // Usuarios demo para el sistema\n  private usuariosDemo: Usuario[] = [\n    {\n      id: 'demo-admin-id',\n      email: 'admin@demo.com',\n      nombreCompleto: 'Carlos Portorreal',\n      rol: RolUsuario.ADMINISTRADOR,\n      activo: true,\n      permisos: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: true },\n        reportes: { leer: true, exportar: true },\n        usuarios: { leer: true, crear: true, editar: true, eliminar: true },\n        configuracion: { leer: true, editar: true }\n      },\n      createdAt: new Date('2024-01-15'),\n      updatedAt: new Date('2024-06-20')\n    },\n    {\n      id: 'demo-supervisor-id',\n      email: 'supervisor@demo.com',\n      nombreCompleto: 'María González Supervisor',\n      rol: RolUsuario.SUPERVISOR,\n      activo: true,\n      permisos: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: false },\n        reportes: { leer: true, exportar: true },\n        usuarios: { leer: true, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      },\n      createdAt: new Date('2024-02-01'),\n      updatedAt: new Date('2024-06-18')\n    },\n    {\n      id: 'demo-operador-id',\n      email: 'operador@demo.com',\n      nombreCompleto: 'Ana Martínez Operador',\n      rol: RolUsuario.OPERADOR,\n      activo: true,\n      permisos: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: false },\n        reportes: { leer: false, exportar: false },\n        usuarios: { leer: false, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      },\n      createdAt: new Date('2024-03-10'),\n      updatedAt: new Date('2024-06-15')\n    },\n    {\n      id: 'demo-consultor-id',\n      email: 'consultor@demo.com',\n      nombreCompleto: 'Luis Pérez Consultor',\n      rol: RolUsuario.CONSULTOR,\n      activo: true,\n      permisos: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: false, editar: false, eliminar: false },\n        reportes: { leer: true, exportar: false },\n        usuarios: { leer: false, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      },\n      createdAt: new Date('2024-04-05'),\n      updatedAt: new Date('2024-06-10')\n    },\n    {\n      id: 'demo-operador2-id',\n      email: 'operador2@demo.com',\n      nombreCompleto: 'Carmen Jiménez',\n      rol: RolUsuario.OPERADOR,\n      activo: true,\n      permisos: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: false },\n        reportes: { leer: false, exportar: false },\n        usuarios: { leer: false, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      },\n      createdAt: new Date('2024-05-12'),\n      updatedAt: new Date('2024-06-22')\n    },\n    {\n      id: 'demo-supervisor2-id',\n      email: 'supervisor2@demo.com',\n      nombreCompleto: 'Roberto Díaz',\n      rol: RolUsuario.SUPERVISOR,\n      activo: false,\n      permisos: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: false },\n        reportes: { leer: true, exportar: true },\n        usuarios: { leer: true, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      },\n      createdAt: new Date('2024-01-20'),\n      updatedAt: new Date('2024-05-30')\n    }\n  ];\n\n  constructor(private supabase: SupabaseService) {\n    this.initializeAuth();\n  }\n\n  private async initializeAuth() {\n    try {\n      const { data: { session } } = await this.supabase.client.auth.getSession();\n      if (session?.user) {\n        this.loadUserProfile(session.user.id);\n      }\n\n      // Escuchar cambios de autenticación\n      this.supabase.client.auth.onAuthStateChange((event, session) => {\n        if (event === 'SIGNED_IN' && session?.user) {\n          this.loadUserProfile(session.user.id);\n        } else if (event === 'SIGNED_OUT') {\n          this.currentUserSubject.next(null);\n        }\n      });\n    } catch (error) {\n      console.error('Error inicializando auth:', error);\n    }\n  }\n\n  private loadUserProfile(userId: string) {\n    this.obtenerPerfil(userId).subscribe({\n      next: (usuario) => {\n        if (usuario) {\n          this.currentUserSubject.next(usuario);\n        }\n      },\n      error: (error) => {\n        console.error('Error cargando perfil:', error);\n      }\n    });\n  }\n\n  // Iniciar sesión\n  login(credentials: LoginCredentials): Observable<Usuario> {\n    // Buscar usuario en datos demo\n    const usuario = this.usuariosDemo.find(u => u.email === credentials.email);\n    \n    if (usuario && usuario.activo) {\n      // Simular autenticación exitosa\n      this.currentUserSubject.next(usuario);\n      return of(usuario);\n    } else if (usuario && !usuario.activo) {\n      throw new Error('Usuario inactivo');\n    } else {\n      throw new Error('Invalid login credentials');\n    }\n  }\n\n  // Registrar usuario (solo administradores)\n  register(userData: RegisterData): Observable<Usuario> {\n    const nuevoUsuario: Usuario = {\n      id: Date.now().toString(),\n      email: userData.email,\n      nombreCompleto: userData.nombreCompleto,\n      rol: userData.rol || RolUsuario.OPERADOR,\n      activo: true,\n      permisos: this.getPermisosPorRol(userData.rol || RolUsuario.OPERADOR),\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    this.usuariosDemo.push(nuevoUsuario);\n    return of(nuevoUsuario);\n  }\n\n  // Cerrar sesión\n  logout(): Observable<void> {\n    this.currentUserSubject.next(null);\n    return of(void 0);\n  }\n\n  // Obtener perfil de usuario\n  obtenerPerfil(userId: string): Observable<Usuario | null> {\n    const usuario = this.usuariosDemo.find(u => u.id === userId);\n    return of(usuario || null);\n  }\n\n  // Obtener todos los usuarios (solo administradores)\n  obtenerUsuarios(): Observable<Usuario[]> {\n    return of([...this.usuariosDemo]);\n  }\n\n  // Actualizar perfil de usuario\n  actualizarPerfil(userId: string, datos: Partial<Usuario>): Observable<Usuario> {\n    const index = this.usuariosDemo.findIndex(u => u.id === userId);\n    if (index !== -1) {\n      this.usuariosDemo[index] = {\n        ...this.usuariosDemo[index],\n        ...datos,\n        updatedAt: new Date()\n      };\n      \n      // Actualizar usuario actual si es el mismo\n      if (this.currentUserSubject.value?.id === userId) {\n        this.currentUserSubject.next(this.usuariosDemo[index]);\n      }\n      \n      return of(this.usuariosDemo[index]);\n    }\n    throw new Error('Usuario no encontrado');\n  }\n\n  // Cambiar contraseña\n  cambiarPassword(newPassword: string): Observable<void> {\n    // Simular cambio de contraseña exitoso\n    return of(void 0);\n  }\n\n  // Verificar si el usuario tiene un permiso específico\n  tienePermiso(modulo: string, accion: string): boolean {\n    const usuario = this.currentUserSubject.value;\n    if (!usuario || !usuario.activo) return false;\n\n    const moduloPermisos = usuario.permisos[modulo as keyof typeof usuario.permisos];\n    if (!moduloPermisos) return false;\n\n    return moduloPermisos[accion as keyof typeof moduloPermisos] || false;\n  }\n\n  // Verificar si el usuario tiene un rol específico\n  tieneRol(rol: RolUsuario): boolean {\n    const usuario = this.currentUserSubject.value;\n    return usuario?.rol === rol || false;\n  }\n\n  // Verificar si el usuario es administrador\n  esAdministrador(): boolean {\n    return this.tieneRol(RolUsuario.ADMINISTRADOR);\n  }\n\n  // Obtener usuario actual\n  getCurrentUser(): Usuario | null {\n    return this.currentUserSubject.value;\n  }\n\n  // Verificar si está autenticado\n  isAuthenticated(): boolean {\n    return this.currentUserSubject.value !== null;\n  }\n\n  // Obtener permisos por rol\n  private getPermisosPorRol(rol: RolUsuario) {\n    const permisosPorRol = {\n      [RolUsuario.ADMINISTRADOR]: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: true },\n        reportes: { leer: true, exportar: true },\n        usuarios: { leer: true, crear: true, editar: true, eliminar: true },\n        configuracion: { leer: true, editar: true }\n      },\n      [RolUsuario.SUPERVISOR]: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: false },\n        reportes: { leer: true, exportar: true },\n        usuarios: { leer: true, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      },\n      [RolUsuario.OPERADOR]: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: true, editar: true, eliminar: false },\n        reportes: { leer: false, exportar: false },\n        usuarios: { leer: false, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      },\n      [RolUsuario.CONSULTOR]: {\n        dashboard: { leer: true },\n        solicitudes: { leer: true, crear: false, editar: false, eliminar: false },\n        reportes: { leer: true, exportar: false },\n        usuarios: { leer: false, crear: false, editar: false, eliminar: false },\n        configuracion: { leer: false, editar: false }\n      }\n    };\n\n    return permisosPorRol[rol];\n  }\n\n  // Registrar sesión (mantenido para compatibilidad)\n  private registrarSesion(usuarioId: string): void {\n    // Implementación demo - no hace nada real\n  }\n\n  // Finalizar sesión (mantenido para compatibilidad)\n  private finalizarSesion(usuarioId: string): void {\n    // Implementación demo - no hace nada real\n  }\n\n  // Obtener IP del cliente (mantenido para compatibilidad)\n  private getClientIP(): string {\n    return 'localhost';\n  }\n\n  // Mapear datos de Supabase a modelo Usuario (mantenido para compatibilidad)\n  private mapToUsuario(data: any): Usuario {\n    return {\n      id: data.id,\n      email: data.email,\n      nombreCompleto: data.nombre_completo,\n      rol: data.rol as RolUsuario,\n      activo: data.activo,\n      permisos: data.permisos,\n      createdAt: data.created_at ? new Date(data.created_at) : undefined,\n      updatedAt: data.updated_at ? new Date(data.updated_at) : undefined\n    };\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}