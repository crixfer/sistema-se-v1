{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class SupabaseService {\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n  get client() {\n    return this.supabase;\n  }\n  // Método para obtener el cliente de Supabase\n  getClient() {\n    return this.supabase;\n  }\n  static {\n    this.ɵfac = function SupabaseService_Factory(t) {\n      return new (t || SupabaseService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SupabaseService,\n      factory: SupabaseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["createClient","environment","SupabaseService","constructor","supabase","supabaseUrl","supabaseKey","client","getClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\comma\\OneDrive\\Documents\\CODING\\DESARROLLO\\Solicitudes\\project-bolt-sb1-xaykabqq\\project\\src\\app\\core\\services\\supabase.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(\n      environment.supabaseUrl,\n      environment.supabaseKey\n    );\n  }\n\n  get client() {\n    return this.supabase;\n  }\n\n  // Método para obtener el cliente de Supabase\n  getClient() {\n    return this.supabase;\n  }\n}"],"mappings":"AACA,SAASA,YAAY,QAAwB,uBAAuB;AACpE,SAASC,WAAW,QAAQ,mCAAmC;;AAK/D,OAAM,MAAOC,eAAe;EAG1BC,YAAA;IACE,IAAI,CAACC,QAAQ,GAAGJ,YAAY,CAC1BC,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACK,WAAW,CACxB;EACH;EAEA,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACH,QAAQ;EACtB;EAEA;EACAI,SAASA,CAAA;IACP,OAAO,IAAI,CAACJ,QAAQ;EACtB;;;uBAjBWF,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAO,OAAA,EAAfP,eAAe,CAAAQ,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}