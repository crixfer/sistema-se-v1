{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { NotificationComponent } from '../notification/notification.component';\nimport { ConfirmationModalComponent } from '../confirmation-modal/confirmation-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/notification.service\";\nimport * as i2 from \"@angular/common\";\nfunction NotificationContainerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"app-notification\", 4);\n    i0.ɵɵlistener(\"closed\", function NotificationContainerComponent_div_1_Template_app_notification_closed_1_listener() {\n      const notification_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onNotificationClosed(notification_r2.id));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const notification_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"notification\", notification_r2);\n  }\n}\nfunction NotificationContainerComponent_app_confirmation_modal_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-confirmation-modal\", 5);\n    i0.ɵɵlistener(\"confirmed\", function NotificationContainerComponent_app_confirmation_modal_2_Template_app_confirmation_modal_confirmed_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onConfirmationResult($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r2.currentConfirmation)(\"visible\", !!ctx_r2.currentConfirmation);\n  }\n}\nexport class NotificationContainerComponent {\n  constructor(notificationService) {\n    this.notificationService = notificationService;\n    this.notifications = [];\n    this.currentConfirmation = null;\n  }\n  ngOnInit() {\n    // Suscribirse a las notificaciones\n    this.notificationsSubscription = this.notificationService.notifications$.subscribe(notifications => {\n      this.notifications = notifications;\n    });\n    // Suscribirse a las confirmaciones\n    this.confirmationSubscription = this.notificationService.confirmation$.subscribe(confirmation => {\n      this.currentConfirmation = confirmation;\n    });\n  }\n  ngOnDestroy() {\n    if (this.notificationsSubscription) {\n      this.notificationsSubscription.unsubscribe();\n    }\n    if (this.confirmationSubscription) {\n      this.confirmationSubscription.unsubscribe();\n    }\n  }\n  onNotificationClosed(id) {\n    this.notificationService.remove(id);\n  }\n  onConfirmationResult(result) {\n    this.notificationService.resolveConfirmation(result);\n  }\n  trackByFn(index, item) {\n    return item.id || index.toString();\n  }\n  static {\n    this.ɵfac = function NotificationContainerComponent_Factory(t) {\n      return new (t || NotificationContainerComponent)(i0.ɵɵdirectiveInject(i1.NotificationService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationContainerComponent,\n      selectors: [[\"app-notification-container\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 3,\n      consts: [[1, \"fixed\", \"top-4\", \"right-4\", \"z-50\", \"space-y-2\", \"pointer-events-none\", \"max-w-sm\"], [\"class\", \"pointer-events-auto\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"data\", \"visible\", \"confirmed\", 4, \"ngIf\"], [1, \"pointer-events-auto\"], [3, \"closed\", \"notification\"], [3, \"confirmed\", \"data\", \"visible\"]],\n      template: function NotificationContainerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NotificationContainerComponent_div_1_Template, 2, 1, \"div\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, NotificationContainerComponent_app_confirmation_modal_2_Template, 1, 2, \"app-confirmation-modal\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.notifications)(\"ngForTrackBy\", ctx.trackByFn);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentConfirmation);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, NotificationComponent, ConfirmationModalComponent],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","NotificationComponent","ConfirmationModalComponent","i0","ɵɵelementStart","ɵɵlistener","NotificationContainerComponent_div_1_Template_app_notification_closed_1_listener","notification_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onNotificationClosed","id","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","NotificationContainerComponent_app_confirmation_modal_2_Template_app_confirmation_modal_confirmed_0_listener","$event","_r4","onConfirmationResult","currentConfirmation","NotificationContainerComponent","constructor","notificationService","notifications","ngOnInit","notificationsSubscription","notifications$","subscribe","confirmationSubscription","confirmation$","confirmation","ngOnDestroy","unsubscribe","remove","result","resolveConfirmation","trackByFn","index","item","toString","ɵɵdirectiveInject","i1","NotificationService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NotificationContainerComponent_Template","rf","ctx","ɵɵtemplate","NotificationContainerComponent_div_1_Template","NotificationContainerComponent_app_confirmation_modal_2_Template","i2","NgForOf","NgIf","encapsulation"],"sources":["C:\\Users\\comma\\OneDrive\\Documents\\CODING\\DESARROLLO\\Solicitudes\\project-bolt-sb1-xaykabqq\\project\\src\\app\\shared\\components\\notification-container\\notification-container.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { NotificationService } from '../../services/notification.service';\nimport { NotificationComponent, Notification } from '../notification/notification.component';\nimport { ConfirmationModalComponent, ConfirmationData } from '../confirmation-modal/confirmation-modal.component';\n\n@Component({\n  selector: 'app-notification-container',\n  standalone: true,\n  imports: [CommonModule, NotificationComponent, ConfirmationModalComponent],\n  template: `\n    <!-- Notificaciones -->\n    <div class=\"fixed top-4 right-4 z-50 space-y-2 pointer-events-none max-w-sm\">\n      <div *ngFor=\"let notification of notifications; trackBy: trackByFn\" \n           class=\"pointer-events-auto\">\n        <app-notification \n          [notification]=\"notification\"\n          (closed)=\"onNotificationClosed(notification.id!)\">\n        </app-notification>\n      </div>\n    </div>\n\n    <!-- Modal de confirmación -->\n    <app-confirmation-modal\n      *ngIf=\"currentConfirmation\"\n      [data]=\"currentConfirmation\"\n      [visible]=\"!!currentConfirmation\"\n      (confirmed)=\"onConfirmationResult($event)\">\n    </app-confirmation-modal>\n  `\n})\nexport class NotificationContainerComponent implements OnInit, OnDestroy {\n  notifications: Notification[] = [];\n  currentConfirmation: ConfirmationData | null = null;\n  \n  private notificationsSubscription?: Subscription;\n  private confirmationSubscription?: Subscription;\n\n  constructor(private notificationService: NotificationService) {}\n\n  ngOnInit() {\n    // Suscribirse a las notificaciones\n    this.notificationsSubscription = this.notificationService.notifications$.subscribe(\n      notifications => {\n        this.notifications = notifications;\n      }\n    );\n\n    // Suscribirse a las confirmaciones\n    this.confirmationSubscription = this.notificationService.confirmation$.subscribe(\n      confirmation => {\n        this.currentConfirmation = confirmation;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.notificationsSubscription) {\n      this.notificationsSubscription.unsubscribe();\n    }\n    if (this.confirmationSubscription) {\n      this.confirmationSubscription.unsubscribe();\n    }\n  }\n\n  onNotificationClosed(id: string) {\n    this.notificationService.remove(id);\n  }\n\n  onConfirmationResult(result: boolean) {\n    this.notificationService.resolveConfirmation(result);\n  }\n\n  trackByFn(index: number, item: Notification): string {\n    return item.id || index.toString();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}